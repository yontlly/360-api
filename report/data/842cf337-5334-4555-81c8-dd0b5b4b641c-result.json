{"name": "应用7中推送一条消息频道消息-多组合不带按钮", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_193', '消息中心应用消息', '发送消息', '应用7中推送一条消息频道消息-多组合不带按钮', '/v1/message/send', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "f60ac449-1d3c-4ee4-8e63-76c00b2a769a-attachment.txt", "type": "text/plain"}], "start": 1622542454497, "stop": 1622542454498}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "8527d7c3-ed22-46bc-a154-2ade7f52a5a1-attachment.txt", "type": "text/plain"}], "start": 1622542454498, "stop": 1622542454499}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "6dce716e-c28d-4a09-99db-86a60772694e-attachment.txt", "type": "text/plain"}], "start": 1622542454505, "stop": 1622542454506}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "3501773b-cbe5-4987-9ad6-587f79228e67-attachment.txt", "type": "text/plain"}], "start": 1622542454506, "stop": 1622542454506}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "ae1adbd6-57f0-483c-a23a-f61dda71d3d8-attachment.txt", "type": "text/plain"}], "start": 1622542454623, "stop": 1622542454623}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "a626c41e-55f8-4847-89a0-0924bc98e589-attachment.txt", "type": "text/plain"}], "start": 1622542454623, "stop": 1622542454624}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "e605304b-3858-4686-881e-8be0763862df-attachment.txt", "type": "text/plain"}], "start": 1622542454624, "stop": 1622542454629}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "3fe2fda5-6015-40cb-9db6-09bb4bfff634-attachment.txt", "type": "text/plain"}], "start": 1622542454630, "stop": 1622542454630}], "parameters": [{"name": "cases", "value": "['case_193', '消息中心应用消息', '发送消息', '应用7中推送一条消息频道消息-多组合不带按钮', '/v1/message/send', '', 'post', 'json', '', '{\\n \"appid\": \"&$.test_023..datas[10].app_id&\",\\n \"access_token\": \"&$.case_100.access_token&\",\\n \"to_users\": [\"&$.test_010..datas[0].uid&\", \"&$.test_011..datas[0].uid&\", \"&$.test_004..datas[0].uid&\", \"&$.test_005..datas[0].uid&\"],\\n \"type\": \"attachment\",\\n \"msg_status\": \"1\",\\n \"message\": {\\n  \"id\": \"ID\",\\n  \"value\": \"业务透传数据\",\\n  \"url\": \"http://www.baidu.com\",\\n  \"head\": {\\n   \"text\": \"头部标题\",\\n   \"bgcolor\": \"FFFFFF\",\\n   \"tcolor\": \"000000\"\\n  },\\n  \"body\": {\\n   \"title\": \"正文标题\",\\n   \"content\": \"正文内容\",\\n   \"image\": \"&$.case_022.media_id&\"\\n  },\\n  \"fields\": [\\n   {\\n    \"name\": \"静态文本框\",\\n    \"text\": \"右侧文字\"\\n   },\\n   {\\n    \"name\": \"单行文本框\",\\n    \"input\": {\\n     \"name\": \"单行文本框\",\\n     \"type\": \"text\",\\n     \"childtype\": 0,\\n     \"text\": \"这是默认值\",\\n     \"must\": true,\\n     \"expand\": false\\n    }\\n   },\\n   {\\n    \"name\": \"多行文本框\",\\n    \"input\": {\\n     \"name\": \"多行文本框\",\\n     \"type\": \"text\",\\n     \"childtype\": 1,\\n     \"hint\": \"这是placeholder\"\\n    }\\n   },\\n   {\\n    \"name\": \"数字文本框\",\\n    \"input\": {\\n     \"name\": \"数字文本框\",\\n     \"childtype\": 2,\\n     \"type\": \"text\"\\n    }\\n   },\\n   {\\n    \"name\": \"字符串文本框\",\\n    \"input\": {\\n     \"name\": \"字符串文本框\",\\n     \"childtype\": 3,\\n     \"type\": \"text\",\\n     \"bold\": false,\\n     \"fontsize\": 1,\\n     \"color\": \"32373C\",\\n     \"regex\": \"\"\\n    }\\n   },\\n   {\\n    \"name\": \"链接控件\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"link\",\\n     \"url\": \"http://www.ccwork.com.cn\",\\n     \"alignment\": 0\\n    }\\n   },\\n   {\\n    \"name\": \"单选框\",\\n    \"input\": {\\n     \"name\": \"选项1\",\\n     \"type\": \"radio\",\\n     \"group\": \"radio\",\\n     \"radio\": true\\n    }\\n   },\\n   {\\n    \"name\": \"\",\\n    \"input\": {\\n     \"name\": \"选项2\",\\n     \"type\": \"radio\",\\n     \"group\": \"radio\",\\n     \"radio\": false\\n    }\\n   },\\n   {\\n    \"name\": \"复选框\",\\n    \"input\": {\\n     \"name\": \"多选1\",\\n     \"type\": \"checkbox\",\\n     \"checkbox\": false\\n    }\\n   },\\n   {\\n    \"name\": \"复选框\",\\n    \"input\": {\\n     \"name\": \"多选2\",\\n     \"type\": \"checkbox\",\\n     \"checkbox\": true\\n    }\\n   },\\n   {\\n    \"name\": \"下拉选择框\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"combox\": \"monday\",\\n     \"type\": \"combox\",\\n     \"list\": [\\n      {\\n       \"key\": \"monday\",\\n       \"val\": \"星期一\"\\n      },\\n      {\\n       \"key\": \"tuesday\",\\n       \"val\": \"星期二\"\\n      }\\n     ]\\n    }\\n   },\\n   {\\n    \"name\": \"时间选择器(年月日时分)\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"datepicker\",\\n     \"childtype\": 0,\\n     \"datepicker\": 1524648199,\\n     \"mindate\": 1514736000,\\n     \"maxdate\": 1557417600\\n    }\\n   },\\n   {\\n    \"name\": \"时间选择器(年月日)\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"datepicker\",\\n     \"childtype\": 1,\\n     \"datepicker\": 1524648199,\\n     \"mindate\": 1514736000,\\n     \"maxdate\": 1557417600\\n    }\\n   },\\n   {\\n    \"name\": \"时分\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"datepicker\",\\n     \"childtype\": 2,\\n     \"datepicker\": 1524648199,\\n     \"mindate\": 1514736000,\\n     \"maxdate\": 1557417600\\n    }\\n   },\\n   {\\n    \"name\": \"文件控件\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"filepicker\",\\n     \"filepicker\": [\\n      {\\n       \"id\": \"5993e81b20e01c0a04170fc1\",\\n       \"name\": \"产品设计.pdf\",\\n       \"size\": 747709\\n      }\\n\\n     ]\\n    }\\n   },\\n   {\\n    \"name\": \"用户选择器\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"userpicker\",\\n     \"childtype\": 1,\\n     \"userpicker\": [\"17660905546266\"]\\n    }\\n   },\\n   {\\n    \"name\": \"复合选择器\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"complexpicker\",\\n     \"childtype\": 1,\\n     \"complexpicker\": {\\n      \"user\": [\"17660905546266\"]\\n\\n     }\\n    }\\n   },\\n   {\\n    \"name\": \"审批路径（本地数据源）\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"id\": \"approval\",\\n     \"type\": \"datapicker\",\\n     \"data\": [\\n      {\\n       \"text\": \"财务部门审批\",\\n       \"value\": \"caiwu\",\\n       \"att\": {\\n        \"data\": [\\n         {\\n          \"text\": \"张三\",\\n          \"value\": \"zhangsan\"\\n         },\\n         {\\n          \"text\": \"李四\",\\n          \"value\": \"lisi\"\\n         },\\n         {\\n          \"text\": \"王五\",\\n          \"value\": \"wangwu\"\\n         }\\n        ]\\n       }\\n      },\\n      {\\n       \"text\": \"人事部门审批\",\\n       \"value\": \"renshi\",\\n       \"att\": {\\n        \"data\": [\\n         {\\n          \"text\": \"李雷\",\\n          \"value\": \"lilei\"\\n         },\\n         {\\n          \"text\": \"韩梅\",\\n          \"value\": \"hanmei\"\\n         },\\n         {\\n          \"text\": \"吉姆\",\\n          \"value\": \"jim\"\\n         }\\n        ]\\n       }\\n      }\\n     ]\\n    }\\n   },\\n   {\\n    \"name\": \"处理人(联动)\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"datapicker\",\\n     \"bind\": {\\n      \"data\": \"approval.att.data\"\\n     }\\n    }\\n   },\\n   {\\n    \"name\": \"审批路径（远程数据源）\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"id\": \"approvalnew\",\\n     \"type\": \"datapicker\",\\n     \"src\": \"http://localhost:8888/callBackDemo/src.php\"\\n    }\\n   },\\n   {\\n    \"name\": \"处理人(联动)\",\\n    \"input\": {\\n     \"name\": \"\",\\n     \"type\": \"datapicker\",\\n     \"bind\": {\\n      \"data\": \"approvalnew.att.data\"\\n     }\\n    }\\n   }\\n  ],\\n  \"footer\": [\\n   {\\n    \"ts\": 1524726601,\\n    \"text\": \"上一环节处理人\",\\n    \"color\": \"32373C\",\\n    \"rtext\": \"李雷\"\\n   }\\n  ]\\n },\\n \"card\": {\\n  \"msgtotal\": \"1\",\\n  \"url\": \"http://192.168.1.239:8282/fed/app-web-workbench/transfer.html?appId=17660905545773\",\\n  \"long_text\": [\\n   {\\n    \"text\": \"统一集成办公平台项目启动会\",\\n    \"tcolor\": \"#32373C\",\\n    \"fontsize\": \"3\",\\n    \"rows\": \"1\"\\n   }\\n  ],\\n  \"short_text\": [\\n   {\\n    \"text\": \"领导安排\",\\n    \"tcolor\": \"#979CA4\",\\n    \"align\": \"1\",\\n    \"fontsize\": \"1\"\\n   },\\n   {\\n    \"text\": \"2019-02-10\",\\n    \"tcolor\": \"#979CA4\",\\n    \"align\": \"1\",\\n    \"fontsize\": \"1\"\\n   }\\n  ],\\n  \"image\": {\\n   \"src\": \"https://pics6.baidu.com/feed/95eef01f3a292df5b0b073db2aea9b6436a873e9.png?token=fd039a5a70398f9ff283018a52309e7e&s=7A02E008D0AC190D365EE4C90300A0BB\",\\n   \"url\": \"http://www.baidu.com\"\\n  }\\n }\\n}', '', '', '{\"$.errmsg\":\"成功\"}']"}], "start": 1622542454497, "stop": 1622542454630, "uuid": "58b96c3b-e5b4-46f4-bd2b-5398d32e0579", "historyId": "1a22de88b23d00d04d3192c5800698a2", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "19614-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}