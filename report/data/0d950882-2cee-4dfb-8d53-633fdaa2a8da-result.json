{"name": "应用7中推送——超长超链接", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_207', '消息中心应用消息', '发送消息', '应用7中推送——超长超链接', '/v1/message/send', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "10d063bc-becd-4edc-a4f7-66a65d73cc77-attachment.txt", "type": "text/plain"}], "start": 1622542456424, "stop": 1622542456424}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "2efb8876-9809-4e65-812f-a5bb581ddf4a-attachment.txt", "type": "text/plain"}], "start": 1622542456425, "stop": 1622542456425}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "3172ba16-1845-4e3e-9e79-d901e47612e5-attachment.txt", "type": "text/plain"}], "start": 1622542456431, "stop": 1622542456432}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "9d0fdd7a-b86d-4bcd-8dee-a4bc8fac77b4-attachment.txt", "type": "text/plain"}], "start": 1622542456432, "stop": 1622542456433}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "11e64f74-198b-4e96-9ef2-9cbd2c31012d-attachment.txt", "type": "text/plain"}], "start": 1622542456539, "stop": 1622542456540}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "89bf81e0-1599-430b-adc2-5c9ea218a90a-attachment.txt", "type": "text/plain"}], "start": 1622542456540, "stop": 1622542456541}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "fc4c80f5-ff15-4398-adb5-199652fe2dc5-attachment.txt", "type": "text/plain"}], "start": 1622542456541, "stop": 1622542456546}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "d5ec3249-caa8-4853-bf9a-ea4e9611f233-attachment.txt", "type": "text/plain"}], "start": 1622542456547, "stop": 1622542456547}], "parameters": [{"name": "cases", "value": "['case_207', '消息中心应用消息', '发送消息', '应用7中推送——超长超链接', '/v1/message/send', '', 'post', 'json', '', '{\\n    \"appid\": \"&$.test_023..datas[10].app_id&\",\\n    \"access_token\": \"&$.case_100.access_token&\",\\n    \"to_users\": [\"&$.test_010..datas[0].uid&\", \"&$.test_011..datas[0].uid&\", \"&$.test_004..datas[0].uid&\",\\n                 \"&$.test_005..datas[0].uid&\"],\\n    \"type\": \"attachment\",\\n    \"msg_status\": \"1\",\\n    \"message\": {\\n        \"id\": \"594ccc6d20e01c077b5c9013\",\\n        \"head\": {\\n            \"text\": \"超链接的测试\",\\n            \"bgcolor\": \"FF0000\",\\n            \"tcolor\": \"FF0000\"\\n        },\\n        \"body\": {\\n            \"title\": \"type类型为link\",\\n            \"content\": \"可交互式消息\",\\n            \"image\": \"6046cf87ee9eac06b2012ac1\"\\n        },\\n        \"fields\": [\\n            {\\n                \"name\": \"link超连接\",\\n                \"input\": {\\n                    \"type\": \"link\",\\n                    \"name\": \"\",\\n                    \"url\": \"https://fanyi.baidu.com/translate?aldtype=16047&query=The+property+id+is+not+defined+and+the+definition+does+not+allow+additional+properties%22&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/The%20property%20id%20is%20not%20defined%20and%20the%20definition%20does%20not%20allow%20additional%20properties%22\",\\n                    \"alignment\": 0\\n                }\\n            },\\n            {\\n                \"name\": \"link超连接\",\\n                \"input\": {\\n                    \"type\": \"link\",\\n                    \"name\": \"\",\\n                    \"url\": \"https://fanyi.baidu.com/translate?aldtype=16047&query=The+property+id+is+not+defined+and+the+definition+does+not+allow+additional+properties%22&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/The%20property%20id%20is%20not%20defined%20and%20the%20definition%20does%20not%20allow%20additional%20properties%22\",\\n                    \"alignment\": 1\\n                }\\n            },\\n            {\\n                \"name\": \"link超连接\",\\n                \"input\": {\\n                    \"type\": \"link\",\\n                    \"name\": \"\",\\n                    \"url\": \"https://fanyi.baidu.com/translate?aldtype=16047&query=The+property+id+is+not+defined+and+the+definition+does+not+allow+additional+properties%22&keyfrom=baidu&smartresult=dict&lang=auto2zh#en/zh/The%20property%20id%20is%20not%20defined%20and%20the%20definition%20does%20not%20allow%20additional%20properties%22\",\\n                    \"alignment\": 2\\n                }\\n            }\\n        ]\\n\\n    }\\n}', '', '', '{\"$.errmsg\":\"成功\"}']"}], "start": 1622542456424, "stop": 1622542456547, "uuid": "d763424c-7850-4238-a3d1-95f53b81dd11", "historyId": "58b30a37af338f2534ac789ee5a84b5c", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "19614-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}