{"name": "查看有频道退出后的情况", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_146', '消息频道管理', '查询目前消息频道和应用', '查看有频道退出后的情况', '/v1/app/channel/list?access_token=&$.case_100.access_token&', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "2668ec0a-305e-4b5c-8716-78fa72d95e67-attachment.txt", "type": "text/plain"}], "start": 1622542450584, "stop": 1622542450584}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "d7bf4c71-4d44-40d7-b5d4-179cebb51b16-attachment.txt", "type": "text/plain"}], "start": 1622542450584, "stop": 1622542450584}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "d721139e-1985-4d34-988a-273023ef59e4-attachment.txt", "type": "text/plain"}], "start": 1622542450584, "stop": 1622542450584}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "0af6d1c5-b527-455e-8034-1fa49f976e91-attachment.txt", "type": "text/plain"}], "start": 1622542450584, "stop": 1622542450585}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "e252299d-55e3-4d74-8e4d-e0e0cf1d5dfc-attachment.txt", "type": "text/plain"}], "start": 1622542450708, "stop": 1622542450709}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "2d544d24-3b29-4238-bb88-064a1636d92e-attachment.txt", "type": "text/plain"}], "start": 1622542450709, "stop": 1622542450709}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "3e2e0423-37a8-4bd5-b90f-e97869d39281-attachment.txt", "type": "text/plain"}], "start": 1622542450710, "stop": 1622542450715}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "02fb679d-561a-49fa-aff4-a0488e430feb-attachment.txt", "type": "text/plain"}], "start": 1622542450716, "stop": 1622542450716}], "parameters": [{"name": "cases", "value": "['case_146', '消息频道管理', '查询目前消息频道和应用', '查看有频道退出后的情况', '/v1/app/channel/list?access_token=&$.case_100.access_token&', '', 'get', 'params', '', '', '', '{\\n    \"errcode\": \"0\",\\n    \"errmsg\": \"成功\",\\n    \"datas\": [\\n        {\\n            \"logo_url\": \"http://10.206.83.102:8989/uploads/image/20210127/d3/d31318766f555357662bde133cbf5c11.jpeg\",\\n            \"logo_media_id\": \"603efc84ee9eac0687213c41\",\\n            \"name\": \"修改后的频道1\",\\n            \"desc\": \"修改后的频道1-描述\",\\n            \"channelid\": \"1917616998533363\",\\n            \"apps\": []\\n        },\\n        {\\n            \"logo_url\": \"http://10.206.83.102:8989/uploads/image/20210127/d3/d31318766f555357662bde133cbf5c11.jpeg\",\\n            \"logo_media_id\": \"603efc84ee9eac0687213c41\",\\n            \"name\": \"新建消息频道-2\",\\n            \"desc\": \"消息频道2-描述\",\\n            \"channelid\": \"1917616998533364\",\\n            \"apps\": []\\n        },\\n        {\\n            \"logo_url\": \"http://10.206.83.102:8989/uploads/image/20210127/d3/d31318766f555357662bde133cbf5c11.jpeg\",\\n            \"logo_media_id\": \"603efc84ee9eac0687213c41\",\\n            \"name\": \"新建消息频道-3\",\\n            \"desc\": \"消息频道3-描述\",\\n            \"channelid\": \"1917616998533365\",\\n            \"apps\": []\\n        }\\n    ]\\n}', '{\"$.errmsg\":\"成功\"}']"}], "start": 1622542450583, "stop": 1622542450716, "uuid": "630f478a-bd05-4637-8258-9a754cde8268", "historyId": "9d7ed9225cf04b80ebac3100a5cd6c5d", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "19614-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}