{"name": "发送可交互式消息-type：combox", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_111', '消息中心应用消息', '发送消息', '发送可交互式消息-type：combox', '/v1/message/send', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "bc579c6b-a73f-4904-ac99-65bb55e7fe7e-attachment.txt", "type": "text/plain"}], "start": 1622542445713, "stop": 1622542445713}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "63d060b3-5269-4d49-9cd9-c83bf87b4c43-attachment.txt", "type": "text/plain"}], "start": 1622542445713, "stop": 1622542445714}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "50ebbd93-6726-41ba-b05b-a89d48d91f99-attachment.txt", "type": "text/plain"}], "start": 1622542445718, "stop": 1622542445719}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "9f35020c-6523-4c67-a78f-5d424da55dc9-attachment.txt", "type": "text/plain"}], "start": 1622542445719, "stop": 1622542445719}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "decb5622-adc0-4c12-a98f-731a2fb7a9f5-attachment.txt", "type": "text/plain"}], "start": 1622542445824, "stop": 1622542445824}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "820875f3-ca42-4161-888f-c210937cf23a-attachment.txt", "type": "text/plain"}], "start": 1622542445825, "stop": 1622542445825}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "14866dec-6561-4e27-9a96-40c1667ba14d-attachment.txt", "type": "text/plain"}], "start": 1622542445826, "stop": 1622542445833}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "a92dbe3d-05a0-4846-9309-c8dbb775ee6a-attachment.txt", "type": "text/plain"}], "start": 1622542445833, "stop": 1622542445834}], "parameters": [{"name": "cases", "value": "['case_111', '消息中心应用消息', '发送消息', '发送可交互式消息-type：combox', '/v1/message/send', '', 'post', 'json', '', '{\\n    \"appid\": \"&$.test_023..datas[12].app_id&\",\\n    \"access_token\": \"&$.case_100.access_token&\",\\n    \"to_users\": [\"&$.test_010..datas[0].uid&\", \"&$.test_011..datas[0].uid&\", \"&$.test_004..datas[0].uid&\",\\n                 \"&$.test_005..datas[0].uid&\"],\\n    \"type\":\"attachment\",\\n    \"message\":{\\n        \"id\":\"594ccc6d20e01c077b5c9013\",\\n        \"head\":{\\n            \"text\":\"下拉选择框的测试\",\\n            \"bgcolor\":\"FF0000\",\\n            \"tcolor\":\"FF0000\"\\n        },\\n        \"body\":{\\n            \"title\":\"type类型为combox\",\\n            \"content\":\"可交互式消息\",\\n            \"image\":\"&$.case_022.media_id&\"\\n        },\\n        \"fields\":[\\n            {\\n                \"name\":\"下啦选择框\",\\n                \"input\":{\\n                    \"type\":\"combox\",\\n                    \"combox\": \"monday\",\\n                    \"name\":\"下啦选择框\",\\n                    \"list\":[{\"key\":\"number\",\"val\":\"星期⼀\"},{\"key\":\"number2\",\"val\":\"星期⼆\"},{\"key\":\"number3\",\"val\":\"星期三\"},{\"key\":\"number4\",\"val\":\"星期四\"},{\"key\":\"number5\",\"val\":\"星期五\"},{\"key\":\"number6\",\"val\":\"星期六\"},{\"key\":\"number7\",\"val\":\"星期天\"}]\\n                }\\n            }\\n        ],\\n        \"action\": [\\n            {\\n                \"name\": \"confirm\",\\n                \"value\": \"业务透传数据\",\\n                \"text\": \"提交\",\\n                \"color\": \"0F82F0\",\\n                \"confirm\":{\\n                 \"title\":\"确定提交吗\",\\n                 \"content\":\"\",\\n                 \"ok\":\"确定\",\\n                 \"cancel\":\"取消\"\\n                }\\n            },\\n            {\\n                \"name\": \"cancel\",\\n                \"value\": \"业务透传数据\",\\n                \"text\": \"取消\",\\n                \"color\": \"979CA4\"\\n            }\\n        ]\\n    }\\n}', '', '{\\n    \"errcode\": \"0\",\\n    \"errmsg\": \"成功\",\\n    \"msgid\": \"6928316628698413307\"\\n}', '{\"$.errmsg\":\"成功\"}']"}], "start": 1622542445713, "stop": 1622542445834, "uuid": "c2f28181-24f5-4fa7-a809-6598bc052848", "historyId": "dab4aab234f91b4b3f05fc6df6fb7c27", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "19614-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}