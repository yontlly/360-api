{"name": "查询日程-查询单个", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_188', '日程接口', '查询日程', '查询日程-查询单个', '/v1/reminder/getreminderbyid?access_token=&$.case_100.access_token&', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "26e54f7a-3d9b-4a46-afd8-a753389e06c6-attachment.txt", "type": "text/plain"}], "start": 1622542453893, "stop": 1622542453893}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "bdcce282-9f93-41c8-91b7-09f21e1f8f0c-attachment.txt", "type": "text/plain"}], "start": 1622542453893, "stop": 1622542453893}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "cf1b24fd-3df8-4607-a217-33aea6267384-attachment.txt", "type": "text/plain"}], "start": 1622542453894, "stop": 1622542453894}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "8dccc526-7abf-4bad-95ca-e4808c22ac81-attachment.txt", "type": "text/plain"}], "start": 1622542453894, "stop": 1622542453895}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "35f58f98-0b95-4681-b260-e5fd2dce1b7a-attachment.txt", "type": "text/plain"}], "start": 1622542453994, "stop": 1622542453995}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "cf03f2af-d502-4fed-bd3f-e824849aee79-attachment.txt", "type": "text/plain"}], "start": 1622542453995, "stop": 1622542453995}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "f8784a7e-b11f-4542-a8ea-e701f52528b9-attachment.txt", "type": "text/plain"}], "start": 1622542453996, "stop": 1622542454002}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "904f5d36-7a2a-42bd-a5fa-13dc4da8e012-attachment.txt", "type": "text/plain"}], "start": 1622542454003, "stop": 1622542454003}], "parameters": [{"name": "cases", "value": "['case_188', '日程接口', '查询日程', '查询日程-查询单个', '/v1/reminder/getreminderbyid?access_token=&$.case_100.access_token&', '', 'post', 'json', '', '{ \"rids\":[\"&$.case_175..datas.rid&\"]}', '', '{\\n    \"errcode\": \"0\",\\n    \"errmsg\": \"成功\",\\n    \"datas\": [\\n        {\\n            \"_id\": \"604adab5ee9eac06ee3437df\",\\n            \"rid\": \"298\",\\n            \"cid\": \"1917616998534763\",\\n            \"title\": \"修改日程-简单日程2-更该提醒设置更改时间\",\\n            \"startTime\": \"1616946241\",\\n            \"endTime\": \"1617036246\",\\n            \"fullDay\": \"0\",\\n            \"level\": \"1\",\\n            \"reminderTime\": \"4800\",\\n            \"reminderWho\": \"1\",\\n            \"repeat\": \"5\",\\n            \"uids\": [],\\n            \"creatorCid\": \"1917616998534763\",\\n            \"creatorUid\": \"1917616998534765\",\\n            \"creatorName\": \"pytest_test1\",\\n            \"remark\": \"修改日程-简单日程2-更该提醒设置更改时间\",\\n            \"action\": \"1\",\\n            \"clientId\": \"f0728dc4-82df-11eb-bf5b-acde48001122\",\\n            \"confirm\": \"0\",\\n            \"team\": \"0\",\\n            \"privacy\": \"0\",\\n            \"created\": \"1615518389\",\\n            \"updated\": \"1615518393\",\\n            \"reminderUc\": \"2\",\\n            \"address\": \"\",\\n            \"attachments\": [],\\n            \"data_no_landing\": \"0\",\\n            \"preview_water_mark\": \"0\",\\n            \"errCode\": \"0\",\\n            \"errMsg\": \"成功\"\\n        }\\n    ]\\n}', '{\"$.errmsg\":\"成功\"}']"}], "start": 1622542453892, "stop": 1622542454003, "uuid": "dca9d319-7fb4-460e-9952-214bc7f781da", "historyId": "414b1bdda349cc23f0aa64b27cd98667", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "19614-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}