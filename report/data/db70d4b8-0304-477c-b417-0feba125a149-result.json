{"name": "发送可交互式消息-type：complexpicker", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_128', '消息中心应用消息', '发送消息', '发送可交互式消息-type：complexpicker', '/v1/message/send', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "784dd6cd-bede-48a1-8aac-e0a5da8a2ac1-attachment.txt", "type": "text/plain"}], "start": 1622542447775, "stop": 1622542447775}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "39b1c9ff-f4ed-41c7-96a7-86b7e57859e3-attachment.txt", "type": "text/plain"}], "start": 1622542447775, "stop": 1622542447776}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "76c2e1f7-aa45-4970-8d58-e16e24af6244-attachment.txt", "type": "text/plain"}], "start": 1622542447796, "stop": 1622542447798}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "3c11bd60-ad9a-47ea-b730-ad61787359b4-attachment.txt", "type": "text/plain"}], "start": 1622542447798, "stop": 1622542447798}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "33a003c2-0b89-4bed-91d3-9b6a815b9a32-attachment.txt", "type": "text/plain"}], "start": 1622542447904, "stop": 1622542447905}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "cfad7918-52c0-4952-8e89-732d5df87f6d-attachment.txt", "type": "text/plain"}], "start": 1622542447905, "stop": 1622542447905}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "fec11ffc-1fa5-4f2f-b6b6-e711b0e0a0ef-attachment.txt", "type": "text/plain"}], "start": 1622542447906, "stop": 1622542447910}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "d3797606-d46c-4f0d-9955-f8e240be3f30-attachment.txt", "type": "text/plain"}], "start": 1622542447911, "stop": 1622542447911}], "parameters": [{"name": "cases", "value": "['case_128', '消息中心应用消息', '发送消息', '发送可交互式消息-type：complexpicker', '/v1/message/send', '', 'post', 'json', '', '{\\n    \"appid\": \"&$.test_023..datas[12].app_id&\",\\n    \"access_token\": \"&$.case_100.access_token&\",\\n    \"to_users\": [\"&$.test_010..datas[0].uid&\", \"&$.test_011..datas[0].uid&\", \"&$.test_004..datas[0].uid&\",\\n                 \"&$.test_005..datas[0].uid&\"],\\n    \"type\":\"attachment\",\\n    \"message\":{\\n        \"id\":\"594ccc6d20e01c077b5c9013\",\\n        \"head\":{\\n            \"text\":\"复合选择器的测试\",\\n            \"bgcolor\":\"FF0000\",\\n            \"tcolor\":\"FF0000\"\\n        },\\n        \"body\":{\\n            \"title\":\"type类型为complexpicker\",\\n            \"content\":\"可交互式消息\",\\n            \"image\":\"&$.case_022.media_id&\"\\n        },\\n        \"fields\":[\\n            {\\n                \"name\":\"复合选择器-选人\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":0,\\n                    \"name\":\"复合选择器-选人\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            },\\n{\\n                \"name\":\"复合选择器-选人选部门\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":1,\\n                    \"name\":\"复合选择器-选人选部门\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            },\\n{\\n                \"name\":\"复合选择器-选群\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":2,\\n                    \"name\":\"复合选择器-选群\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            },\\n{\\n                \"name\":\"复合选择器-选人选部门选群\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":3,\\n                    \"name\":\"复合选择器-选人选部门选群\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            },\\n{\\n                \"name\":\"复合选择器-选自定义用户列表\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":4,\\n                    \"name\":\"复合选择器-选自定义用户列表\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            }\\n        ],\\n        \"action\": [\\n            {\\n                \"name\": \"confirm\",\\n                \"value\": \"业务透传数据\",\\n                \"text\": \"提交\",\\n                \"color\": \"0F82F0\",\\n                \"confirm\":{\\n                 \"title\":\"确定提交吗\",\\n                 \"content\":\"\",\\n                 \"ok\":\"确定\",\\n                 \"cancel\":\"取消\"\\n                }\\n            },\\n            {\\n                \"name\": \"cancel\",\\n                \"value\": \"业务透传数据\",\\n                \"text\": \"取消\",\\n                \"color\": \"979CA4\"\\n            }\\n        ]\\n    }\\n}', '', '{\\n    \"errcode\": \"0\",\\n    \"errmsg\": \"成功\",\\n    \"msgid\": \"6928316628698413307\"\\n}', '{\"$.errmsg\":\"成功\"}']"}], "start": 1622542447775, "stop": 1622542447912, "uuid": "fc21a274-19bc-44e7-9aff-740c38c33972", "historyId": "7f3e7490ba4883d63fe584cfc96c6d6e", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "19614-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}