{"name": "创建组织", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:kaifang || 预期结果: admin", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'datas': {'admin_account': 'kaifang', 'admin_uid': '1917616998539147', 'cid': '1917616998539146'}, 'errcode': '0', 'errmsg': '成功'}\nexpect_str = '{\"$.errmsg\":\"成功\",\"$.datas.admin_account\":\"admin\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_005', '通讯录管理', '组织管理', '创建组织', '/v1/corp/createcorp?access_token=&$.case_003.access_token&', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'datas': {'admin_account': 'kaifang', 'admin_uid': '1917616998539147', 'cid': '1917616998539146'}, 'errcode': '0', 'errmsg': '成功'}\nexpect_str = '{\"$.errmsg\":\"成功\",\"$.datas.admin_account\":\"admin\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:kaifang || 预期结果: admin\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "e5b50fda-5eda-4494-9d14-9942250f980d-attachment.txt", "type": "text/plain"}], "start": 1622542316113, "stop": 1622542316113}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "ee046bd9-c548-4be5-a146-9c7b68e4c7e1-attachment.txt", "type": "text/plain"}], "start": 1622542316113, "stop": 1622542316113}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "1695733d-66e0-47aa-ab5c-226979e26dee-attachment.txt", "type": "text/plain"}], "start": 1622542316113, "stop": 1622542316113}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "0e2166e7-4256-4de9-b862-404dfea8977c-attachment.txt", "type": "text/plain"}], "start": 1622542316113, "stop": 1622542316114}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "05b59c6f-7c6a-438c-a71e-9f053e4e0034-attachment.txt", "type": "text/plain"}], "start": 1622542317663, "stop": 1622542317663}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "6c93c459-6846-4e8b-8098-06a60ea988fb-attachment.txt", "type": "text/plain"}], "start": 1622542317664, "stop": 1622542317664}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "3c4405aa-1806-4e0d-846e-aaf78a130924-attachment.txt", "type": "text/plain"}], "start": 1622542317664, "stop": 1622542317664}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "ed36d750-bd23-4fce-b6ab-c6452501032d-attachment.txt", "type": "text/plain"}], "start": 1622542317665, "stop": 1622542317665}, {"name": "第2个断言", "status": "passed", "attachments": [{"name": "第2个断言", "source": "bcf711d1-efc2-406c-bf4b-44640510f90b-attachment.txt", "type": "text/plain"}], "start": 1622542317666, "stop": 1622542317666}], "parameters": [{"name": "cases", "value": "['case_005', '通讯录管理', '组织管理', '创建组织', '/v1/corp/createcorp?access_token=&$.case_003.access_token&', '', 'post', 'data', '', '{\\n \"admin_name\": \"kaifang\",\\n \"corp_name\": \"开放平台测试_创建组织\",\\n \"account_number\": \"100\"\\n}', '', '{\\n    \"trans_id\": \"D945A00E432F8F8B12BDFED676D93AEC\",\\n    \"err_code\": \"0\",\\n    \"err_msg\": \"成功\",\\n    \"timestamp\": \"1611658831\",\\n    \"time_cost\": \"1.432\",\\n    \"datas\": [\\n        {\\n            \"cid\": \"1917616998516692\",\\n            \"admin_account\": \"admin\",\\n            \"admin_uid\": \"1917616998516693\"\\n        }\\n    ]\\n}', '{\"$.errmsg\":\"成功\",\"$.datas.admin_account\":\"admin\"}']"}], "start": 1622542316112, "stop": 1622542317666, "uuid": "9e518a9c-641b-4ac4-94b4-b81edf0fb39f", "historyId": "0739167ffd7bddb403117cdf6fcb588f", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "19614-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}