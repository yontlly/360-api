{"name": "应用7中推送——complexpicker", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_209', '消息中心应用消息', '发送消息', '应用7中推送——complexpicker', '/v1/message/send', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '100003', 'errmsg': '获取access_token失败，或者access_token无效'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:获取access_token失败，或者access_token无效 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "14cfeef8-aab4-40e4-8a85-9097c1eda0f6-attachment.txt", "type": "text/plain"}], "start": 1622542456691, "stop": 1622542456691}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "7f9a26f8-4b49-4146-8248-cfb2ea314ec1-attachment.txt", "type": "text/plain"}], "start": 1622542456691, "stop": 1622542456691}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "35503d57-decd-4ab5-946a-3000fbc90c0b-attachment.txt", "type": "text/plain"}], "start": 1622542456718, "stop": 1622542456719}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "c6172258-6c5a-46bc-9c5c-33366861063f-attachment.txt", "type": "text/plain"}], "start": 1622542456719, "stop": 1622542456720}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "981b1d9c-2cd6-43a5-9aa0-38cfe8a0445b-attachment.txt", "type": "text/plain"}], "start": 1622542456830, "stop": 1622542456831}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "7866a000-8132-4f07-ba6e-d84a31a495cd-attachment.txt", "type": "text/plain"}], "start": 1622542456831, "stop": 1622542456831}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "751aa7cf-dfac-4e78-953b-1f21d36541a0-attachment.txt", "type": "text/plain"}], "start": 1622542456832, "stop": 1622542456838}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "08aab387-21fc-411e-939f-c28ec34e1630-attachment.txt", "type": "text/plain"}], "start": 1622542456839, "stop": 1622542456839}], "parameters": [{"name": "cases", "value": "['case_209', '消息中心应用消息', '发送消息', '应用7中推送——complexpicker', '/v1/message/send', '', 'post', 'json', '', '{\\n    \"appid\": \"&$.test_023..datas[10].app_id&\",\\n    \"access_token\": \"&$.case_100.access_token&\",\\n    \"to_users\": [\"&$.test_010..datas[0].uid&\", \"&$.test_011..datas[0].uid&\", \"&$.test_004..datas[0].uid&\",\\n                 \"&$.test_005..datas[0].uid&\"],\\n    \"type\":\"attachment\",\\n    \"msg_status\": \"1\",\\n    \"message\":{\\n        \"id\":\"594ccc6d20e01c077b5c9013\",\\n        \"head\":{\\n            \"text\":\"复合选择器的测试\",\\n            \"bgcolor\":\"FF0000\",\\n            \"tcolor\":\"FF0000\"\\n        },\\n        \"body\":{\\n            \"title\":\"type类型为complexpicker\",\\n            \"content\":\"可交互式消息\",\\n            \"image\":\"&$.case_022.media_id&\"\\n        },\\n        \"fields\":[\\n            {\\n                \"name\":\"复合选择器-选人\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":0,\\n                    \"name\":\"复合选择器-选人\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            },\\n{\\n                \"name\":\"复合选择器-选人选部门\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":1,\\n                    \"name\":\"复合选择器-选人选部门\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            },\\n{\\n                \"name\":\"复合选择器-选群\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":2,\\n                    \"name\":\"复合选择器-选群\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            },\\n{\\n                \"name\":\"复合选择器-选人选部门选群\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":3,\\n                    \"name\":\"复合选择器-选人选部门选群\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            },\\n{\\n                \"name\":\"复合选择器-选自定义用户列表\",\\n                \"input\":{\\n                    \"type\":\"complexpicker\",\\n                    \"childtype\":4,\\n                    \"name\":\"复合选择器-选自定义用户列表\",\\n                    \"complexpicker\":{\"user\": [\"&$.case_116.uid&\",\"&$.case_117.uid&\",\"&$.case_118.uid&\",\"&$.case_119.uid&\",\"&$.case_120.uid&\",\"&$.case_121.uid&\",\"&$.case_122.uid&\",\"&$.case_123.uid&\",\"&$.case_124.uid&\"],\"dept\": [\"&$.case_113.did&\",\"&$.case_114.did&\",\"&$.case_115.did&\"],\"group\": [\"&$.case_125.groupid&\",\"&$.case_126.groupid&\",\"&$.case_127.groupid&\"]}\\n                }\\n            }\\n        ],\\n        \"action\": [\\n            {\\n                \"name\": \"confirm\",\\n                \"value\": \"业务透传数据\",\\n                \"text\": \"提交\",\\n                \"color\": \"0F82F0\",\\n                \"confirm\":{\\n                 \"title\":\"确定提交吗\",\\n                 \"content\":\"\",\\n                 \"ok\":\"确定\",\\n                 \"cancel\":\"取消\"\\n                }\\n            },\\n            {\\n                \"name\": \"cancel\",\\n                \"value\": \"业务透传数据\",\\n                \"text\": \"取消\",\\n                \"color\": \"979CA4\"\\n            }\\n        ]\\n    }\\n}', '', '', '{\"$.errmsg\":\"成功\"}']"}], "start": 1622542456690, "stop": 1622542456839, "uuid": "f7e7c0c5-6d8a-4734-b990-8ed9ad55af77", "historyId": "df86dfef26e5786e81e33b25fcc8caeb", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "19614-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}